echo
"FROM python"
echo "RUN pip install flask" echo "cOPY
•/static /home/myapp/static/"
echo
./templates /home/myapp/templates/"
echo "coPy sample_ app.py /home/myapp/" echo "EXPOSE 8080"
echo "CMD python3 / home/myapp/sample_app.py"

csr1kv ansible_user=cisco ansible_password=cisco123! ansible_host=192.168.56.101

[
    fromnetmikoimportConnectHandler
router = {​​
"device_type":"cisco_ios",
"host":"172.16.1.102",
"username":"cisco",
"password":"cisco123!",
}​​
ssh = ConnectHandler(**router)
show_run = "show run"
show_interface = " show ip int br"
show_version =" show version "
op = True
whileop :
print (""""
1. do show run 
2. do show ip int br
3. do show version
otra : salir
""")
opcion = int(input("ingrese opcion :"))
ifopcion == 1:
request = ssh.send_command(show_run)
print (request)
elifopcion == 2:
request=ssh.send_command(show_interface)
print (request)
elifopcion == 3:
request = ssh.send_command(show_version)
print (request)
else:
print("Opcion incorrectasaliendo")
op = False


mport json
import requests
requests.packages.urllib3.disable_warnings()
api_url = "https://192.168.56.115/restconf/data/ietf-interfaces:interfaces/interface=Loopback1"
headers = {
            "Accept": "application/yang-data+json",
            "Content-type": "application/yang-data+json"
            }
basicauth = ("cisco", "cisco123!")
yangConfig = {
    "ietf-interfaces:interface": {
        "name": "Loopback1",
        "type": "iana-if-type:softwareLoopback",
        "description": "NUEVA LOOPBACK",
        "enabled": True,
        "ietf-ip:ipv4": {
            "address": [
                {
                    "ip": "1.1.1.1",
                    "netmask": "255.255.255.0"
                }
            ]
        },
        "ietf-ip:ipv6": {}
    }
}
resp = requests.put(api_url, data=json.dumps(yangConfig), auth=basicauth, headers=headers, verify=False)
if(resp.status_code >= 200 and resp.status_code <= 299):
    print("STATUS OK: {}".format(resp.status_code))
else:
    print("Error code {}, reply: {}".format(resp.status_code, resp.json()))
